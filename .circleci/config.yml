# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/python:3.7-node
  resource_class: xlarge

jobs:
  build:
    <<: *defaults
    steps:
      - add_ssh_keys:
          fingerprints:
            - "fc:74:18:39:55:22:d5:f6:34:38:50:fa:5e:0d:33:e1"

      - checkout
      
      - run:
          name: Check out uclusion_sdk
          command: |
            cd ~/
            git clone git@github.com:Uclusion/uclusion_sdk.git
      
      - run:
          name: Install web ui
          command: |
            cd ~/repo
            echo 'export MY_RELEASE_VAR=`echo $CIRCLE_SHA1 | head -c 16`' >> $BASH_ENV
            yarn install
      - run:
          name: Copy env file
          command: |
            cd ~/repo
            cp ${env_name}.env .env
      - run:
          name: Build web ui
          command: |
            cd ~/repo
            npm run-script build
          no_output_timeout: 30m

      - run:
          name: Deploy web ui
          command: |
            [ -d ~/.aws ] && echo "Found" || mkdir ~/.aws
            echo -e "[default]\naws_access_key_id=$aws_access_key_id\naws_secret_access_key=$aws_secret_access_key\n" > ~/.aws/credentials
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            cd ~/repo
            npm run-script deploy-${env_name}

      - run:
          name: Invalidate Cloud Front cache
          command: |
            cd ~/repo
            aws configure set preview.cloudfront true
            aws cloudfront create-invalidation --distribution-id ${ui_distribution_id} --paths "/*"

      - run:
          name: Check out utils repo
          command: |
            cd ~/
            mkdir utils_repo
            git clone git@github.com:Uclusion/circleci_orbs.git ./utils_repo

      - run:
          name: record the release
          command: |
            cd ~/utils_repo
            pip install --user boto3
            pip install --user pynamodb
            # -c true to require signout on this release
            python -m utils.record_release -a ${MY_RELEASE_VAR} -c false

workflows:
  deploy-stage:
    jobs:
      - build:
          filters:
            tags:
              only: /^stage_backend.*/
            branches:
              ignore: /.*/
          context: stage
  deploy-production:
    jobs:
      - build:
          filters:
            tags:
              only: /^production_backend.*/
            branches:
              ignore: /.*/
          context: production